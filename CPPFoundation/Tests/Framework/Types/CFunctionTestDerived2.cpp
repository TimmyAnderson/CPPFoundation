//----------------------------------------------------------------------------------------------------------------------
#include "CFunctionTestDerived2.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Testing
{
//----------------------------------------------------------------------------------------------------------------------
	using namespace CPPFoundation::Foundation;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CFunctionTestDerived2::CFunctionTestDerived2(int32 BaseValue, int32 DerivedValue2)
		: CFunctionTestBase(BaseValue), MDerivedValue2(DerivedValue2)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CFunctionTestDerived2::~CFunctionTestDerived2(void)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CString CFunctionTestDerived2::GetText(void) const
	{
		return(CString::Format("BASE [",MBaseValue,"] DERIVED VALUE 2 [",MDerivedValue2,"]"));
	}
//----------------------------------------------------------------------------------------------------------------------
	int32 CFunctionTestDerived2::GetSum(void) const
	{
		return(MBaseValue+MDerivedValue2);
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------