//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Cache/CCacheEntry.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Testing
{
//----------------------------------------------------------------------------------------------------------------------
	class CCacheEntryTest1 final : public CPPFoundation::Foundation::CCacheEntry
	{
//----------------------------------------------------------------------------------------------------------------------
		private:
			CPPFoundation::Foundation::CString						MValue;

		public:
			const CPPFoundation::Foundation::CString& GetValue(void) const noexcept;

		public:
			CCacheEntryTest1(const CPPFoundation::Foundation::CCacheEntryID& ID, const CPPFoundation::Foundation::CExpirationTime& ExpirationTime, const CPPFoundation::Foundation::CString& Value);
			virtual ~CCacheEntryTest1(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	using														CSPCacheEntryTest1=CPPFoundation::Foundation::CSharedPointer<CCacheEntryTest1>;
	using														CCSPCacheEntryTest1=CPPFoundation::Foundation::CSharedPointer<const CCacheEntryTest1>;
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------