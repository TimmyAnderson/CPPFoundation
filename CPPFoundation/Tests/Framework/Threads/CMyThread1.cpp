//----------------------------------------------------------------------------------------------------------------------
#include "CMyThread1.h"
#include <Framework/Foundation/Console/CConsoleHelper.h>
#include <Framework/Foundation/Types/CFunction.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Testing
{
//----------------------------------------------------------------------------------------------------------------------
	using namespace CPPFoundation::Foundation;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CMyThread1::CMyThread1(CLogWriter& LogWriter, CAtomic<Size>& Counter)
		: CThread(LogWriter,"MY THREAD 1"), MCounter(Counter)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CMyThread1::~CMyThread1(void)
	{
		StopThread();
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	void CMyThread1::ThreadMethod(bool)
	{
		if (HasThreadExiting()==false)
		{
			CConsoleHelper::WriteLine("THREAD is RUNNING !");

			MCounter.Execute(CFunction<void(Size&)>([](Size& Value){Value++;}));
		}
	}
//----------------------------------------------------------------------------------------------------------------------
	CTimeout CMyThread1::GetTimeout(void)
	{
		return(CTimeout(1000));
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	void CMyThread1::StartThread(void)
	{
		InternalStartThread();
	}
//----------------------------------------------------------------------------------------------------------------------
	void CMyThread1::StopThread(void)
	{
		InternalStopThread();
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------