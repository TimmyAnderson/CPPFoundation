//----------------------------------------------------------------------------------------------------------------------
#include "CObject.h"
#include <typeinfo>
#include <Framework/Platform/Global/CFunctions.h>
#include <Framework/Foundation/Exceptions/CInvalidCastException.h>
#include <Framework/Foundation/Strings/CString.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	using namespace CPPFoundation::Platform;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CObject::CObject(void)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CObject::~CObject(void)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	[[noreturn]] void CObject::ThrowInvalidCastException(const Char* TypeName) const
	{
		throw(CInvalidCastException(CString::Format("OBJECT can't be CAST to TYPE [",TypeName,"] !")));
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CString CObject::ToString(void) const
	{
		return(CFunctions::GetDemangledName(typeid(*this).name()));
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	std::ostream& operator<<(std::ostream& Stream, const CObject& Value)
	{
		Stream << Value.ToString();

		return(Stream);
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------