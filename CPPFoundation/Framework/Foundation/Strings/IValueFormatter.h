//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "CString.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	template<typename TValue>
	class IValueFormatter
	{
//----------------------------------------------------------------------------------------------------------------------
		public:
			virtual bool Parse(const CString& Value, TValue& Result) const=0;
			virtual bool Parse(const CString& Value, Size From, Size To, TValue& Result) const=0;
			virtual void ConvertToString(CString& String, TValue Value) const=0;
			virtual CString ConvertToString(TValue Value) const=0;

		public:
			IValueFormatter(void)
			{
			}

			virtual ~IValueFormatter(void)
			{
			}
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------