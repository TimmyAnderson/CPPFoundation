//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Objects/CObject.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class CAbstractMutex : public CObject
	{
//----------------------------------------------------------------------------------------------------------------------
		public:
			CAbstractMutex& operator=(const CAbstractMutex&)=delete;

		public:
			virtual void Lock(void) const=0;
			virtual void Unlock(void) const=0;
			// Can return FALSE even if MUTEX is LOCKED.
			virtual bool TryLock(void) const=0;

		public:
			CAbstractMutex(void);
			CAbstractMutex(const CAbstractMutex&)=delete;
			virtual ~CAbstractMutex(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------