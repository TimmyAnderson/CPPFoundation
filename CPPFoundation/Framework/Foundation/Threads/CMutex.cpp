//----------------------------------------------------------------------------------------------------------------------
#include "CMutex.h"
#include <system_error>
#include <Framework/Foundation/Exceptions/CSystemException.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	using namespace std;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CMutex::CMutex(void)
		: MMutex()
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CMutex::~CMutex(void)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	void CMutex::Lock(void) const
	{
		try
		{
			MMutex.lock();
		}
		catch(const system_error& E)
		{
			throw(CSystemException("Can't LOCK MUTEX !",E));
		}
		catch(...)
		{
			throw(CSystemException("Can't LOCK MUTEX !"));
		}
	}
//----------------------------------------------------------------------------------------------------------------------
	void CMutex::Unlock(void) const
	{
		try
		{
			// According to the C++ SPECIFICATION METHOD can THROW EXCEPTIONS.
			MMutex.unlock();
		}
		catch(const system_error& E)
		{
			throw(CSystemException("Can't UNLOCK MUTEX !",E));
		}
		catch(...)
		{
			throw(CSystemException("Can't UNLOCK MUTEX !"));
		}
	}
//----------------------------------------------------------------------------------------------------------------------
	// Can return FALSE even if MUTEX is LOCKED.
	bool CMutex::TryLock(void) const
	{
		// METHOD try_lock() according to the DOCUMENTATION doesn't THROW any EXCEPTION.
		bool													IsPossiblyLocked=MMutex.try_lock();

		return(IsPossiblyLocked);
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------