//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <memory>
#include <Framework/Platform/Global/Macros.h>
#include <Framework/Foundation/Types/CSharedPointer.h>
#include "IEnumerator.h"
#include "IEnumerableConst.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	template<typename TItemType>
	class IEnumerable : public IEnumerableConst<TItemType>
	{
//----------------------------------------------------------------------------------------------------------------------
		public:
			using												CEnumeratorPointer=CSharedPointer<IEnumerator<TItemType>>;

		public:
			virtual CEnumeratorPointer GetEnumerator(void)=0;

		public:
			IEnumerable(void)
			{
			}

			virtual ~IEnumerable(void) override
			{
			}
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------