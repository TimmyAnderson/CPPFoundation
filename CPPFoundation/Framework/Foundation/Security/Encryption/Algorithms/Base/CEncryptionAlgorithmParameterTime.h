//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Time/CDateTime.h>
#include "CEncryptionAlgorithmParameter.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class CEncryptionAlgorithmParameterTime : public CEncryptionAlgorithmParameter
	{
//----------------------------------------------------------------------------------------------------------------------
		public:
			static const CEncryptionAlgorithmParameterID		PARAMETER_ID;

		private:
			CDateTime											MTime;

		public:
			const CDateTime& GetTime(void) const noexcept;

		public:
			CEncryptionAlgorithmParameterTime(const CDateTime& Time);
			virtual ~CEncryptionAlgorithmParameterTime(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	using														CSPEncryptionAlgorithmParameterTime=CPPFoundation::Foundation::CSharedPointer<CEncryptionAlgorithmParameterTime>;
	using														CCSPEncryptionAlgorithmParameterTime=CPPFoundation::Foundation::CSharedPointer<const CEncryptionAlgorithmParameterTime>;
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------