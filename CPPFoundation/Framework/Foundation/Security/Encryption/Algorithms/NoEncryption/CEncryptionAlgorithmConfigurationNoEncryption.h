//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Security/Encryption/Algorithms/Base/CEncryptionAlgorithmConfiguration.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class CEncryptionAlgorithmConfigurationNoEncryption final : public CEncryptionAlgorithmConfiguration
	{
//----------------------------------------------------------------------------------------------------------------------
		public:
			const static CString								ALGORITHM_NAME;

		public:
			CEncryptionAlgorithmConfigurationNoEncryption(void);
			virtual ~CEncryptionAlgorithmConfigurationNoEncryption(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	using														CSPEncryptionAlgorithmConfigurationNoEncryption=CPPFoundation::Foundation::CSharedPointer<CEncryptionAlgorithmConfigurationNoEncryption>;
	using														CCSPEncryptionAlgorithmConfigurationNoEncryption=CPPFoundation::Foundation::CSharedPointer<const CEncryptionAlgorithmConfigurationNoEncryption>;
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------