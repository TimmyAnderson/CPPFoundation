//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Strings/CString.h>
#include <Framework/Foundation/Types/CSharedPointer.h>
#include "EDirectoryEntryType.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class CDirectoryEntry final : public CObject
	{
//----------------------------------------------------------------------------------------------------------------------
		private:
			CString												MEntryName;
			EDirectoryEntryType									MEntryType;

		public:
			const CString& GetEntryName(void) const noexcept;
			EDirectoryEntryType GetEntryType(void) const noexcept;

		public:
			CDirectoryEntry(const CString& EntryName, EDirectoryEntryType EntryType);
			virtual ~CDirectoryEntry(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	using														CSPDirectoryEntry=CPPFoundation::Foundation::CSharedPointer<CDirectoryEntry>;
	using														CCSPDirectoryEntry=CPPFoundation::Foundation::CSharedPointer<const CDirectoryEntry>;
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------