//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include "CSchedulerTimePeriod.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class CSchedulerTimePeriodByMinute final : public CSchedulerTimePeriod
	{
//----------------------------------------------------------------------------------------------------------------------
		private:
			int32												MSecond;

		public:
			virtual CString ToString(void) const override;
			virtual CSchedulerTime CalculateNextSchedulerTime(const CSchedulerTime& TimeToCheck) const override;

		public:
			int32 GetSecond(void) const noexcept;

		public:
			CSchedulerTimePeriodByMinute(int32 Second);
			virtual ~CSchedulerTimePeriodByMinute(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	using														CSPSchedulerTimePeriodByMinute=CSharedPointer<CSchedulerTimePeriodByMinute>;
	using														CCSPSchedulerTimePeriodByMinute=CSharedPointer<const CSchedulerTimePeriodByMinute>;
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------