//----------------------------------------------------------------------------------------------------------------------
#include "CKeyValue.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	CKeyValue::CKeyValue(const CString& Key, const CString& Value)
		: MKey(Key), MValue(Value)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CKeyValue::CKeyValue(CString&& Key, CString&& Value)
		: MKey(FUNCTION_MOVE(Key)), MValue(FUNCTION_MOVE(Value))
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CKeyValue::CKeyValue(const CKeyValue& Other)
		: MKey(Other.MKey), MValue(Other.MValue)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CKeyValue::CKeyValue(CKeyValue&& Other) noexcept
		: MKey(FUNCTION_MOVE(Other.MKey)), MValue(FUNCTION_MOVE(Other.MValue))
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CKeyValue::~CKeyValue(void)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CKeyValue& CKeyValue::operator=(const CKeyValue& Other)
	{
		MKey=Other.MKey;
		MValue=Other.MValue;

		return(*this);
	}
//----------------------------------------------------------------------------------------------------------------------
	CKeyValue& CKeyValue::operator=(CKeyValue&& Other) noexcept
	{
		MKey=FUNCTION_MOVE(Other.MKey);
		MValue=FUNCTION_MOVE(Other.MValue);

		return(*this);
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	const CString& CKeyValue::GetKey(void) const noexcept
	{
		return(MKey);
	}
//----------------------------------------------------------------------------------------------------------------------
	const CString& CKeyValue::GetValue(void) const noexcept
	{
		return(MValue);
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------