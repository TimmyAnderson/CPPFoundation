//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Objects/CObject.h>
#include <Framework/Foundation/Strings/CString.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class CKeyValue final : public CObject
	{
//----------------------------------------------------------------------------------------------------------------------
		private:
			CString												MKey;
			CString												MValue;

		public:
			CKeyValue& operator=(const CKeyValue& Other);
			CKeyValue& operator=(CKeyValue&& Other) noexcept;

		public:
			const CString& GetKey(void) const noexcept;
			const CString& GetValue(void) const noexcept;

		public:
			CKeyValue(const CString& Key, const CString& Value);
			CKeyValue(CString&& Key, CString&& Value);
			CKeyValue(const CKeyValue& Other);
			CKeyValue(CKeyValue&& Other) noexcept;
			virtual ~CKeyValue(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------