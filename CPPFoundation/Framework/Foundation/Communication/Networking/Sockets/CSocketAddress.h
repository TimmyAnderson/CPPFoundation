//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Strings/CString.h>
#include <Framework/Foundation/Types/CSharedPointer.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class CSocketAddress : public CObject
	{
//----------------------------------------------------------------------------------------------------------------------
		public:
			bool operator==(const CSocketAddress& Other) const;
			bool operator!=(const CSocketAddress& Other) const;

		public:
			virtual CString ToString(void) const override=0;
			virtual bool Equals(const CSocketAddress& Other) const=0;

		public:
			CSocketAddress(void);
			virtual ~CSocketAddress(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	using														CSPSocketAddress=CSharedPointer<CSocketAddress>;
	using														CCSPSocketAddress=CSharedPointer<const CSocketAddress>;
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------