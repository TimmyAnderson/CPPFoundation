//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Objects/CObject.h>
#include <Framework/Foundation/Strings/CString.h>
#include <Framework/Foundation/Time/CTimeout.h>
#include <Framework/Foundation/Types/CSharedPointer.h>
#include "ESocketWaitEvent.h"
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	class ISocketSynchronizationObject : public virtual CObject
	{
//----------------------------------------------------------------------------------------------------------------------
		public:
			virtual void SetEvent(void)=0;
			virtual void ResetEvent(void)=0;

		public:
			ISocketSynchronizationObject(void);
			virtual ~ISocketSynchronizationObject(void) override;
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	using														ISPSocketSynchronizationObject=CSharedPointer<ISocketSynchronizationObject>;
	using														ICSPSocketSynchronizationObject=CSharedPointer<const ISocketSynchronizationObject>;
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------