//----------------------------------------------------------------------------------------------------------------------
#pragma once
//----------------------------------------------------------------------------------------------------------------------
#include <Framework/Foundation/Strings/CString.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	enum class ESocketDNSProtocolType : uint8
	{
//----------------------------------------------------------------------------------------------------------------------
		E_UNSPECIFIED=0x00,
		E_TCP=0x01,
		E_UDP=0x02,
//----------------------------------------------------------------------------------------------------------------------
	};
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	inline CString& operator<<(CString& Text, ESocketDNSProtocolType Value)
	{
		switch(Value)
		{
			case ESocketDNSProtocolType::E_UNSPECIFIED:
			{
				Text+="UNSPECIFIED";
			}
			break;

			case ESocketDNSProtocolType::E_TCP:
			{
				Text+="TCP";
			}
			break;

			case ESocketDNSProtocolType::E_UDP:
			{
				Text+="UDP";
			}
			break;

			default:
			{
				Text+="UNKNOWN";
			}
			break;
		}

		return(Text);
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	inline bool IsValidValue(ESocketDNSProtocolType Value)
	{
		switch(Value)
		{
			case ESocketDNSProtocolType::E_UNSPECIFIED:
			case ESocketDNSProtocolType::E_TCP:
			case ESocketDNSProtocolType::E_UDP:
			{
				return(true);
			}

			default:
			{
				return(false);
			}
		}

		return(false);
	}
//----------------------------------------------------------------------------------------------------------------------
	inline bool ParseValue(const CString& TextValue, ESocketDNSProtocolType& Value)
	{
		CString													AdjustedTextValue=CString::ToUpperString(TextValue);

		if (AdjustedTextValue=="UNSPECIFIED")
		{
			Value=ESocketDNSProtocolType::E_UNSPECIFIED;

			return(true);
		}
		else if (AdjustedTextValue=="TCP")
		{
			Value=ESocketDNSProtocolType::E_TCP;

			return(true);
		}
		else if (AdjustedTextValue=="UDP")
		{
			Value=ESocketDNSProtocolType::E_UDP;

			return(true);
		}
		else
		{
			return(false);
		}
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------