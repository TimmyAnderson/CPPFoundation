//----------------------------------------------------------------------------------------------------------------------
#include "CSocketDNSResolver.h"
#include <Framework/Platform/Sockets/CSocketDNSHelper.h>
//----------------------------------------------------------------------------------------------------------------------
namespace CPPFoundation
{
//----------------------------------------------------------------------------------------------------------------------
namespace Foundation
{
//----------------------------------------------------------------------------------------------------------------------
	using namespace CPPFoundation::Platform;
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CSocketDNSResolver::CSocketDNSResolver(void)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
	CSocketDNSResolver::~CSocketDNSResolver(void)
	{
	}
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
	CVector<CSocketIPAddress> CSocketDNSResolver::ConvertDNSAddressToIPAddress(const CSocketDNSAddress& DNSAddress, ESocketDNSAddressType AddressType, ESocketDNSProtocolType ProtocolType)
	{
		return(CSocketDNSHelper::ConvertDNSAddressToIPAddress(DNSAddress,AddressType,ProtocolType));
	}
//----------------------------------------------------------------------------------------------------------------------
	CSocketDNSAddress CSocketDNSResolver::ConvertIPAddressToDNSAddress(const CSocketIPAddress& IPAddress, bool DNSAddressRequired)
	{
		return(CSocketDNSHelper::ConvertIPAddressToDNSAddress(IPAddress,DNSAddressRequired));
	}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------
}
//----------------------------------------------------------------------------------------------------------------------